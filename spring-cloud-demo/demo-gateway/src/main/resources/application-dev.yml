#服务端口
server:
  port: 8080
  
#zuul请求配置
#zuul配置方式有很多种，如果不采用注册中心，则是通过地址方式直接转发，如下所示：
#zuul:
  #routes:
    #key的名字随便取
    #api-1:
      #path: /api-1/**   #客户端的请求前缀必须为/api-1/，这个前缀也可以随便取，例如服务端提供了一个接口地址为http://xx.xx.xx.xx:8082/project/xyz/xx，那么用户请求地址必须是http://xx.xx.xx.xx:8082/project/api-1/xyz/xx
      #url: http://ip1:port1/
    #api-2:
      #path: /api-2/**
      #url: http://ip2:port2/
#依赖注册中心的配置，建议采用的注册中心使用consul,eureka已经停止更新
zuul:
  routes:
    api-1:
      path: /prefix1/**
      serviceId: TheServiceNameWhichRegistedInConsul
    api-2:
      path: /prefix2/**
      serviceId: TheServiceNameWhichRegistedInConsul
  #网关限流，可以对认证用户、原始请求、URL、全局服务的限流
  ratelimit:
    key-prefix: prefix   #对请求前缀的进行限流
    enable: true
    repository: redis   #用来存储统计信息，可以是consul,redis,JPA,IN_MEMORY，默认是in_memory，但是如果设置为in_memory对应高并发限流本地内存消耗极快
    behind-proxy: true
    default-policy:   #可选，针对所有路由配置的策略，除非单独配置了policies
      limit: 10   #每个刷新窗口对应的请求数据限制
      quota: 1000   #每个刷新窗口对应的请求时间限制（秒）
      refresh-interval: 60   #刷新窗口的时间（秒）
      type:   #限流方式
         - user
         - origin
         - url
    policies:
      xxserviceid:   #特定路由
        limit: 10
    

      
#注册中心配置，一般网关服务不需要注册到注册中心，没有什么意义
spring:
  cloud:
    consul:
      host: xx.xx.xx.xx
      port: xxxx
      discovery:
        register: false
        
#熔断器，只在调用方配置即可
feign: 
  hystrix:
    enabled: true
        
#spring mvc配置及redis配置等等，根据实际条件进行配置
spring:
  servlet:
    multipart:
      max-file-size: 20MB   #最大一次可上传的文件大小
  redis:
    database: 0
    host: xx.xx.xx.xx
    port: xxxx
    timeout: 6000   #连接超时时间
    jedis: 
      pool: 
        max-active: 8   #连接池最大连接数（负数表示没有限制）
        max-idle: 8   #连接池中最大空闲连接
        max-wait: -1   #连接池最大阻塞等待时间（负值表示没有限制）
        min-idle: 0   #连接池中最小空闲连接
        
#日志配置
logging:
  config: classpath:log4j2-dev.xml